{"ast":null,"code":"import React, { useState } from 'react';\nimport MissionRow from './MissionRow';\nimport './MissionLog.scss';\nconst rce = React.createElement;\n/* props\n* campaignName\n* finale\n*/\n\nfunction MissionLog(props) {\n  //const missions = props.missions.map((mission) => rce('li', null, rce(MissionRow, mission)));\n  const [missions, setMissions] = useState([{\n    missionType: 'Story Mission',\n    missionTitle: 'Out of the Frying Pan',\n    threatLevel: 2,\n    missionAccomplished: true,\n    itemTiers: [1],\n    rebelUpgradeComplete: true,\n    imperialUpgradeComplete: true\n  }, {\n    missionType: 'Side Mission',\n    missionTitle: 'Into the Fire',\n    threatLevel: 3,\n    missionAccomplished: true,\n    itemTiers: [1, 2],\n    rebelUpgradeComplete: false,\n    imperialUpgradeComplete: false\n  }, {\n    missionType: 'story mission',\n    missionTitle: 'Dark Days',\n    threatLevel: 4,\n    missionAccomplished: false,\n    itemTiers: [2],\n    rebelUpgradeComplete: false,\n    imperialUpgradeComplete: false\n  }, {\n    missionType: 'side mission',\n    missionTitle: '',\n    threatLevel: 5,\n    missionAccomplished: false,\n    itemTiers: [2, 3],\n    rebelUpgradeComplete: false,\n    imperialUpgradeComplete: false\n  }]);\n\n  function handleChange(idx, key, value) {\n    let missionsClone = missions.slice;\n    console.log(missionsClone);\n    alert(\"missionsClone has been logged\");\n    missionsClone[idx][key] = value; // TODO validate this works\n\n    setMissions(missionsClone);\n  }\n\n  const missionItems = missions.map((mission, index) => {\n    mission.index = index;\n    mission.handleChange = handleChange;\n    return rce('li', {\n      key: index\n    }, rce(MissionRow, mission));\n  });\n  return rce('div', {\n    className: 'mission-log'\n  }, rce('h1', {\n    className: 'campaign-title'\n  }, props.campaignName, ' Campaign Log'), rce('div', {\n    className: 'field-row'\n  }, rce('span', {\n    id: 'mission-label'\n  }, 'Mission'), rce('span', {\n    id: 'threat-label'\n  }, 'Threat Level'), rce('span', {\n    id: 'rebel-upgrade-label'\n  }, 'Rebel Upgrade'), rce('span', {\n    id: 'imperial-upgrade-label'\n  }, 'Imperial Upgrade')), rce('ul', {\n    className: 'mission-list'\n  }, missionItems) //rce finale\n  );\n}\n\nexport default MissionLog; // props.finale example: \n// {\n// \tmissionTitle: 'Our Last Hope',\n// \tthreatLevel: 6,\n// \tmissionAccomplished: false\n// }\n// props.missions example:\n// [\n// \t{\n// \t\tmissionType: 'Story Mission',\n// \t\tmissionTitle: 'Out of the Frying Pan',\n// \t\tthreatLevel: 2,\n// \t\tmissionAccomplished: true,\n// \t\titemTiers: [1],\n// \t\trebelUpgradeComplete: true,\n// \t\timperialUpgradeComplete: true,\n// \t},\n// \t{\n// \t\tmissionType: 'Side Mission',\n// \t\tmissionTitle: 'Into the Fire',\n// \t\tthreatLevel: 3,\n// \t\tmissionAccomplished: true,\n// \t\titemTiers: [1, 2],\n// \t\trebelUpgradeComplete: false,\n// \t\timperialUpgradeComplete: false\n// \t},\n// \t{\n// \t\tmissionType: 'story mission',\n// \t\tmissionTitle: 'Dark Days',\n// \t\tthreatLevel: 4,\n// \t\tmissionAccomplished: false,\n// \t\titemTiers: [2],\n// \t\trebelUpgradeComplete: false,\n// \t\timperialUpgradeComplete: false,\n// \t},\n// \t{\n// \t\tmissionType: 'side mission',\n// \t\tmissionTitle: '',\n// \t\tthreatLevel: 5,\n// \t\tmissionAccomplished: false,\n// \t\titemTiers: [2, 3],\n// \t\trebelUpgradeComplete: false,\n// \t\timperialUpgradeComplete: false\n// \t},\n// ]","map":{"version":3,"sources":["/Users/wzt2h9/Documents/Development/react-workspace/imperial-assault-campaign-log/src/MissionLog.js"],"names":["React","useState","MissionRow","rce","createElement","MissionLog","props","missions","setMissions","missionType","missionTitle","threatLevel","missionAccomplished","itemTiers","rebelUpgradeComplete","imperialUpgradeComplete","handleChange","idx","key","value","missionsClone","slice","console","log","alert","missionItems","map","mission","index","className","campaignName","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport MissionRow from './MissionRow';\nimport './MissionLog.scss';\n\nconst rce = React.createElement;\n\n/* props\n* campaignName\n* finale\n*/\nfunction MissionLog(props) {\n\t//const missions = props.missions.map((mission) => rce('li', null, rce(MissionRow, mission)));\n\n\tconst[missions, setMissions] = useState([\n\t\t{\n\t\t\tmissionType: 'Story Mission',\n\t\t\tmissionTitle: 'Out of the Frying Pan',\n\t\t\tthreatLevel: 2,\n\t\t\tmissionAccomplished: true,\n\t\t\titemTiers: [1],\n\t\t\trebelUpgradeComplete: true,\n\t\t\timperialUpgradeComplete: true,\n\t\t},\n\t\t{\n\t\t\tmissionType: 'Side Mission',\n\t\t\tmissionTitle: 'Into the Fire',\n\t\t\tthreatLevel: 3,\n\t\t\tmissionAccomplished: true,\n\t\t\titemTiers: [1, 2],\n\t\t\trebelUpgradeComplete: false,\n\t\t\timperialUpgradeComplete: false\n\t\t},\n\t\t{\n\t\t\tmissionType: 'story mission',\n\t\t\tmissionTitle: 'Dark Days',\n\t\t\tthreatLevel: 4,\n\t\t\tmissionAccomplished: false,\n\t\t\titemTiers: [2],\n\t\t\trebelUpgradeComplete: false,\n\t\t\timperialUpgradeComplete: false,\n\t\t},\n\t\t{\n\t\t\tmissionType: 'side mission',\n\t\t\tmissionTitle: '',\n\t\t\tthreatLevel: 5,\n\t\t\tmissionAccomplished: false,\n\t\t\titemTiers: [2, 3],\n\t\t\trebelUpgradeComplete: false,\n\t\t\timperialUpgradeComplete: false\n\t\t},\n\t]);\n\n\tfunction handleChange(idx, key, value) {\n\t\tlet missionsClone = missions.slice;\n\t\tconsole.log(missionsClone);\n\t\talert(\"missionsClone has been logged\");\n\t\tmissionsClone[idx][key] = value; // TODO validate this works\n\t\tsetMissions(missionsClone);\n\t}\n\n\tconst missionItems = missions.map((mission, index) => {\n\t\tmission.index = index;\n\t\tmission.handleChange = handleChange;\n\t\treturn rce('li', {key: index}, rce(MissionRow, mission))\n\t});\n\n\treturn rce('div', {className: 'mission-log'},\n\t\trce('h1', {className: 'campaign-title'}, props.campaignName, ' Campaign Log'),\n\t\trce('div', {className: 'field-row'}, \n\t\t\trce('span', {id: 'mission-label'}, 'Mission'),\n\t\t\trce('span', {id: 'threat-label'}, 'Threat Level'),\n\t\t\trce('span', {id: 'rebel-upgrade-label'}, 'Rebel Upgrade'),\n\t\t\trce('span', {id: 'imperial-upgrade-label'}, 'Imperial Upgrade'),\n\t\t),\n\t\trce('ul', {className: 'mission-list'}, missionItems)\n\t\t//rce finale\n\t);\n}\n\nexport default MissionLog;\n\n// props.finale example: \n// {\n// \tmissionTitle: 'Our Last Hope',\n// \tthreatLevel: 6,\n// \tmissionAccomplished: false\n// }\n\n// props.missions example:\n// [\n// \t{\n// \t\tmissionType: 'Story Mission',\n// \t\tmissionTitle: 'Out of the Frying Pan',\n// \t\tthreatLevel: 2,\n// \t\tmissionAccomplished: true,\n// \t\titemTiers: [1],\n// \t\trebelUpgradeComplete: true,\n// \t\timperialUpgradeComplete: true,\n// \t},\n// \t{\n// \t\tmissionType: 'Side Mission',\n// \t\tmissionTitle: 'Into the Fire',\n// \t\tthreatLevel: 3,\n// \t\tmissionAccomplished: true,\n// \t\titemTiers: [1, 2],\n// \t\trebelUpgradeComplete: false,\n// \t\timperialUpgradeComplete: false\n// \t},\n// \t{\n// \t\tmissionType: 'story mission',\n// \t\tmissionTitle: 'Dark Days',\n// \t\tthreatLevel: 4,\n// \t\tmissionAccomplished: false,\n// \t\titemTiers: [2],\n// \t\trebelUpgradeComplete: false,\n// \t\timperialUpgradeComplete: false,\n// \t},\n// \t{\n// \t\tmissionType: 'side mission',\n// \t\tmissionTitle: '',\n// \t\tthreatLevel: 5,\n// \t\tmissionAccomplished: false,\n// \t\titemTiers: [2, 3],\n// \t\trebelUpgradeComplete: false,\n// \t\timperialUpgradeComplete: false\n// \t},\n// ]"]},"metadata":{},"sourceType":"module"}