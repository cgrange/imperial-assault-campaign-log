{"ast":null,"code":"import React from 'react';\nimport Counter from './Counter';\nimport './ImperialTracker.scss';\nconst rce = React.createElement;\nconst agendaName = 'agenda-name';\nconst agendaTarget = 'agenda-target'; //TODO change step back to 1 for influence tracker (it's 2 for testing purposes)\n\n/* props\n* xp\n* setXp\n* influence\n* setInfluence\n* ongoingAgendas\n* setOngoingAgendas\n*/\n\nfunction ImperialTracker(props) {\n  function handleAgendaRowChange(index, event) {\n    let newAgendas = props.ongoingAgendas.slice();\n    const target = event.target;\n\n    if (target.className === agendaName) {\n      newAgendas[index].name = target.value;\n      alert('name change: ' + target.value);\n      console.log(newAgendas);\n    } else if (target.className === agendaTarget) {\n      newAgendas[index].target = target.value;\n      alert('target change: ' + target.value);\n    } else {\n      alert('we got problems in the Imperial Tracker element');\n    }\n\n    props.setOngoingAgendas(newAgendas);\n  }\n\n  const ongoingAgendaList = props.ongoingAgendas.map((item, idx) => {\n    item.index = idx;\n    item.handleChange = handleAgendaRowChange;\n    return AgendaRow(item);\n  });\n  return rce('div', {\n    className: 'imperial-tracker'\n  }, rce('h1', {\n    className: 'title'\n  }, 'Empire'), rce('div', {\n    className: 'experience-tracker'\n  }, rce('h4', {\n    className: 'header'\n  }, 'Experience (XP)'), rce(Counter, {\n    quantity: props.xp,\n    setQuantity: props.setXp,\n    step: 1,\n    min: 0\n  })), rce('div', {\n    className: 'influence-tracker'\n  }, rce('h4', {\n    className: 'header'\n  }, 'Influence'), rce(Counter, {\n    quantity: props.influence,\n    setQuantity: props.setInfluence,\n    step: 1,\n    min: 0\n  })), rce('div', {\n    className: 'agenda-tracker'\n  }, rce('h4', {\n    className: 'header'\n  }, 'Ongoing Agendas'), rce('span', {\n    className: 'agenda-label'\n  }, 'Name'), rce('span', {\n    className: 'agenda-label'\n  }, 'Target'), rce('ul', {\n    className: 'agenda-list'\n  }, ongoingAgendaList)));\n}\n/* props\n* name\n* target\n* index\n* handleChange\n*/\n\n\nfunction AgendaRow(props) {\n  return rce('li', {\n    className: 'agenda-row'\n  }, rce('input', {\n    type: 'text',\n    className: agendaName,\n    value: props.name,\n    onChange: e => {\n      props.handleChange(props.index, e);\n    }\n  }), rce('input', {\n    type: 'text',\n    className: agendaTarget,\n    value: props.target,\n    onChange: e => {\n      props.handleChange(props.index, e);\n    }\n  }));\n}\n\nexport default ImperialTracker;","map":{"version":3,"sources":["/Users/wzt2h9/Documents/Development/react-workspace/duels-frontend/src/ImperialTracker.js"],"names":["React","Counter","rce","createElement","agendaName","agendaTarget","ImperialTracker","props","handleAgendaRowChange","index","event","newAgendas","ongoingAgendas","slice","target","className","name","value","alert","console","log","setOngoingAgendas","ongoingAgendaList","map","item","idx","handleChange","AgendaRow","quantity","xp","setQuantity","setXp","step","min","influence","setInfluence","type","onChange","e"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Counter from './Counter';\nimport './ImperialTracker.scss';\n\nconst rce = React.createElement;\nconst agendaName = 'agenda-name';\nconst agendaTarget = 'agenda-target';\n\n//TODO change step back to 1 for influence tracker (it's 2 for testing purposes)\n\n/* props\n* xp\n* setXp\n* influence\n* setInfluence\n* ongoingAgendas\n* setOngoingAgendas\n*/\nfunction ImperialTracker(props) {\n\tfunction handleAgendaRowChange(index, event) {\n\t\tlet newAgendas = props.ongoingAgendas.slice();\n\t\tconst target = event.target;\n\n\t\tif(target.className === agendaName) {\n\t\t\tnewAgendas[index].name = target.value;\n\t\t\talert('name change: ' + target.value);\n\t\t\tconsole.log(newAgendas);\n\t\t} else if (target.className === agendaTarget) {\n\t\t\tnewAgendas[index].target = target.value;\n\t\t\talert('target change: ' + target.value);\n\t\t} else {\n\t\t\talert('we got problems in the Imperial Tracker element');\n\t\t}\n\n\t\tprops.setOngoingAgendas(newAgendas);\n\t}\n\n\tconst ongoingAgendaList = props.ongoingAgendas.map((item, idx) => {\n\t\titem.index = idx;\n\t\titem.handleChange = handleAgendaRowChange;\n\t\treturn AgendaRow(item);\n\t});\n\n\treturn rce('div', {className: 'imperial-tracker'},\n\t\trce('h1', {className: 'title'}, 'Empire'),\n\t\trce('div', {className: 'experience-tracker'},\n\t\t\trce('h4', {className: 'header'}, 'Experience (XP)'),\n\t\t\trce(Counter, {quantity: props.xp, setQuantity: props.setXp, step: 1, min: 0})\n\t\t),\n\t\trce('div', {className: 'influence-tracker'},\n\t\t\trce('h4', {className: 'header'}, 'Influence'),\n\t\t\trce(Counter, {quantity: props.influence, setQuantity: props.setInfluence, step: 1, min: 0})\n\t\t),\n\t\trce('div', {className: 'agenda-tracker'},\n\t\t\trce('h4', {className: 'header'}, 'Ongoing Agendas'),\n\t\t\trce('span', {className: 'agenda-label'}, 'Name'),\n\t\t\trce('span', {className: 'agenda-label'}, 'Target'),\n\t\t\trce('ul', {className: 'agenda-list'}, ongoingAgendaList)\n\t\t)\n\t)\n}\n\n/* props\n* name\n* target\n* index\n* handleChange\n*/\nfunction AgendaRow(props) {\n\treturn rce('li', {className: 'agenda-row'}, \n\t\trce('input', {\n\t\t\t\ttype: 'text',\n\t\t\t\tclassName: agendaName,\n\t\t\t\tvalue: props.name,\n\t\t\t\tonChange: (e) => {props.handleChange(props.index, e)}\n\t\t\t}\n\t\t),\n\t\trce('input', {\n\t\t\t\ttype: 'text',\n\t\t\t\tclassName: agendaTarget,\n\t\t\t\tvalue: props.target,\n\t\t\t\tonChange: (e) => {props.handleChange(props.index, e)}\n\t\t\t}\n\t\t)\n\t)\n}\n\nexport default ImperialTracker;\n"]},"metadata":{},"sourceType":"module"}