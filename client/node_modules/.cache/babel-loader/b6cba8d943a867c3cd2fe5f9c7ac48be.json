{"ast":null,"code":"import React from 'react';\nimport Checkbox from './Checkbox.js';\nimport './MissionRow.scss';\nconst rce = React.createElement;\n/* props: \n*    missionType,\n*    threatLevel,\n*    itemTiers\n*\tindex\n*\thandleChange\n*/\n\nfunction MissionRow(props) {\n  function handleTitleChange(event) {\n    props.handleChange(props.index, 'missionTitle', event.target.value);\n  }\n\n  function setMissionAccomplished(missionAccomplished) {\n    props.handleChange(props.index, 'missionAccomplished', missionAccomplished);\n  } // TODO if the inline upgrade change works consider doing the other ones inline as well\n\n\n  function printUpgradeSteps(itemTiers, rebels) {\n    if (rebels) {\n      let tiersStr = itemTiers.map((el, idx, arr) => {\n        return idx === arr.length - 1 ? el : el + ' & ';\n      }).join(' ');\n      return 'Tier ' + tiersStr + ' Items, Spend XP';\n    } else {\n      return 'Agenda, Spend XP';\n    }\n  }\n\n  return rce('div', {\n    className: \"mission-row\"\n  }, rce('span', {\n    className: 'cool-corners type-and-title-wrapper'\n  }, rce('span', {\n    className: 'mission-type'\n  }, props.missionType), rce('input', {\n    className: 'mission-title',\n    type: 'text',\n    value: props.missionTitle,\n    onChange: handleTitleChange\n  }, null)), rce('span', {\n    className: 'threat-level'\n  }, props.threatLevel, rce('div', {\n    className: 'checkbox-wrapper'\n  }, rce(Checkbox, {\n    checked: props.missionAccomplished,\n    setChecked: setMissionAccomplished\n  }))), rce(UpgradeBox, {\n    upgradeSteps: printUpgradeSteps(props.itemTiers, true),\n    upgradeComplete: props.rebelUpgradeComplete,\n    setUpgradeComplete: value => props.handleChange(props.index, 'rebelUpgradeComplete', value)\n  }), rce(UpgradeBox, {\n    upgradeSteps: printUpgradeSteps(null, false),\n    upgradeComplete: props.imperialUpgradeComplete,\n    setUpgradeComplete: value => props.handleChange(props.index, 'imperialUpgradeComplete', value)\n  }));\n}\n\nexport default MissionRow;","map":{"version":3,"sources":["/Users/wzt2h9/Documents/Development/react-workspace/imperial-assault-campaign-log/src/MissionRow.js"],"names":["React","Checkbox","rce","createElement","MissionRow","props","handleTitleChange","event","handleChange","index","target","value","setMissionAccomplished","missionAccomplished","printUpgradeSteps","itemTiers","rebels","tiersStr","map","el","idx","arr","length","join","className","missionType","type","missionTitle","onChange","threatLevel","checked","setChecked","UpgradeBox","upgradeSteps","upgradeComplete","rebelUpgradeComplete","setUpgradeComplete","imperialUpgradeComplete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,mBAAP;AAEA,MAAMC,GAAG,GAAGF,KAAK,CAACG,aAAlB;AAEA;;;;;;;;AAOA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAE1B,WAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AACjCF,IAAAA,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACI,KAAzB,EAAgC,cAAhC,EAAgDF,KAAK,CAACG,MAAN,CAAaC,KAA7D;AACA;;AAED,WAASC,sBAAT,CAAgCC,mBAAhC,EAAqD;AACpDR,IAAAA,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACI,KAAzB,EAAgC,qBAAhC,EAAuDI,mBAAvD;AACA,GARyB,CAU1B;;;AAEA,WAASC,iBAAT,CAA2BC,SAA3B,EAAsCC,MAAtC,EAA8C;AAC7C,QAAGA,MAAH,EAAW;AACV,UAAIC,QAAQ,GAAGF,SAAS,CAACG,GAAV,CAAc,CAACC,EAAD,EAAKC,GAAL,EAAUC,GAAV,KAAkB;AAC9C,eAAOD,GAAG,KAAKC,GAAG,CAACC,MAAJ,GAAa,CAArB,GAAyBH,EAAzB,GAA8BA,EAAE,GAAG,KAA1C;AACA,OAFc,EAEZI,IAFY,CAEP,GAFO,CAAf;AAGA,aAAO,UAAUN,QAAV,GAAqB,kBAA5B;AACA,KALD,MAKO;AACN,aAAO,kBAAP;AACA;AACD;;AAED,SAAOf,GAAG,CAAC,KAAD,EAAQ;AAACsB,IAAAA,SAAS,EAAE;AAAZ,GAAR,EACTtB,GAAG,CAAC,MAAD,EAAS;AAACsB,IAAAA,SAAS,EAAE;AAAZ,GAAT,EACFtB,GAAG,CAAC,MAAD,EAAS;AAACsB,IAAAA,SAAS,EAAE;AAAZ,GAAT,EAAsCnB,KAAK,CAACoB,WAA5C,CADD,EAEFvB,GAAG,CAAC,OAAD,EAAU;AAACsB,IAAAA,SAAS,EAAE,eAAZ;AAA6BE,IAAAA,IAAI,EAAE,MAAnC;AAA2Cf,IAAAA,KAAK,EAAEN,KAAK,CAACsB,YAAxD;AAAsEC,IAAAA,QAAQ,EAAEtB;AAAhF,GAAV,EAA8G,IAA9G,CAFD,CADM,EAKTJ,GAAG,CAAC,MAAD,EAAS;AAACsB,IAAAA,SAAS,EAAE;AAAZ,GAAT,EACFnB,KAAK,CAACwB,WADJ,EAEF3B,GAAG,CAAC,KAAD,EAAQ;AAACsB,IAAAA,SAAS,EAAE;AAAZ,GAAR,EACFtB,GAAG,CAACD,QAAD,EAAW;AAAC6B,IAAAA,OAAO,EAAEzB,KAAK,CAACQ,mBAAhB;AAAqCkB,IAAAA,UAAU,EAAEnB;AAAjD,GAAX,CADD,CAFD,CALM,EAWTV,GAAG,CAAC8B,UAAD,EACF;AACCC,IAAAA,YAAY,EAAEnB,iBAAiB,CAACT,KAAK,CAACU,SAAP,EAAkB,IAAlB,CADhC;AAECmB,IAAAA,eAAe,EAAE7B,KAAK,CAAC8B,oBAFxB;AAGCC,IAAAA,kBAAkB,EAAGzB,KAAD,IAAWN,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACI,KAAzB,EAAgC,sBAAhC,EAAwDE,KAAxD;AAHhC,GADE,CAXM,EAkBTT,GAAG,CAAC8B,UAAD,EACF;AACCC,IAAAA,YAAY,EAAEnB,iBAAiB,CAAC,IAAD,EAAO,KAAP,CADhC;AAECoB,IAAAA,eAAe,EAAE7B,KAAK,CAACgC,uBAFxB;AAGCD,IAAAA,kBAAkB,EAAGzB,KAAD,IAAWN,KAAK,CAACG,YAAN,CAAmBH,KAAK,CAACI,KAAzB,EAAgC,yBAAhC,EAA2DE,KAA3D;AAHhC,GADE,CAlBM,CAAV;AA0BA;;AAED,eAAeP,UAAf","sourcesContent":["import React from 'react';\nimport Checkbox from './Checkbox.js';\nimport './MissionRow.scss';\n\nconst rce = React.createElement;\n\n/* props: \n*    missionType,\n*    threatLevel,\n*    itemTiers\n*\tindex\n*\thandleChange\n*/\nfunction MissionRow(props) {\n\n\tfunction handleTitleChange(event) {\n\t\tprops.handleChange(props.index, 'missionTitle', event.target.value);\n\t}\n\n\tfunction setMissionAccomplished(missionAccomplished) {\n\t\tprops.handleChange(props.index, 'missionAccomplished', missionAccomplished);\n\t}\n\n\t// TODO if the inline upgrade change works consider doing the other ones inline as well\n\n\tfunction printUpgradeSteps(itemTiers, rebels) {\n\t\tif(rebels) {\n\t\t\tlet tiersStr = itemTiers.map((el, idx, arr) => {\n\t\t\t\treturn idx === arr.length - 1 ? el : el + ' & ';\n\t\t\t}).join(' ');\n\t\t\treturn 'Tier ' + tiersStr + ' Items, Spend XP';\n\t\t} else {\n\t\t\treturn 'Agenda, Spend XP';\n\t\t}\n\t}\n  \n\treturn rce('div', {className: \"mission-row\"},\n\t\trce('span', {className: 'cool-corners type-and-title-wrapper'}, \n\t\t\trce('span', {className: 'mission-type'}, props.missionType),\n\t\t\trce('input', {className: 'mission-title', type: 'text', value: props.missionTitle, onChange: handleTitleChange}, null),\n\t\t),\n\t\trce('span', {className: 'threat-level'}, \n\t\t\tprops.threatLevel,\n\t\t\trce('div', {className: 'checkbox-wrapper'},\n\t\t\t\trce(Checkbox, {checked: props.missionAccomplished, setChecked: setMissionAccomplished}),\n\t\t\t)\n\t\t),\n\t\trce(UpgradeBox, \n\t\t\t{\n\t\t\t\tupgradeSteps: printUpgradeSteps(props.itemTiers, true),\n\t\t\t\tupgradeComplete: props.rebelUpgradeComplete, \n\t\t\t\tsetUpgradeComplete: (value) => props.handleChange(props.index, 'rebelUpgradeComplete', value)\n\t\t\t}\n\t\t),\n\t\trce(UpgradeBox,\n\t\t\t{\n\t\t\t\tupgradeSteps: printUpgradeSteps(null, false),\n\t\t\t\tupgradeComplete: props.imperialUpgradeComplete,\n\t\t\t\tsetUpgradeComplete: (value) => props.handleChange(props.index, 'imperialUpgradeComplete', value),\n\t\t\t}\n\t\t),\n\t)\n}\n\nexport default MissionRow;"]},"metadata":{},"sourceType":"module"}