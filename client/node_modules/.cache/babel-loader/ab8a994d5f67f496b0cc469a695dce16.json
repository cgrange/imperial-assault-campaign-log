{"ast":null,"code":"import React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ImperialTracker from './ImperialTracker';\nimport MissionLog from './MissionLog';\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\n\nconst request = require('request');\n\nconst rce = React.createElement;\n\nfunction App() {\n  const url = 'http://localhost:8080';\n  const options = {\n    json: true\n  };\n  let appData;\n  request(url, options, (error, res, body) => {\n    if (error) {\n      console.log(error);\n    } else if (res.statusCode === 200) {\n      appData = body;\n    } else {\n      console.log(res);\n    }\n  });\n  const [missionLog, setMissionLog] = useState(appData.missionLog); // const[imperialTracker, setImperialTracker] = useState(appData.imperialTracker);\n\n  const imperialTracker = appData.imperialTracker;\n  const [ongoingAgendas, setOngoingAgendas] = useState(imperialTracker.ongoingAgendas);\n  const [influence, setInfluence] = useState(imperialTracker.influence);\n  const [xp, setXp] = useState(imperialTracker.xp);\n  return rce('div', {\n    className: 'App'\n  }, rce(MissionLog, {\n    campaignName: 'Return to Hoth'\n  }), rce(ImperialTracker, {\n    xp: xp,\n    setXp: setXp,\n    influence: influence,\n    setInfluence: setInfluence,\n    ongoingAgendas: ongoingAgendas,\n    setOngoingAgendas: setOngoingAgendas\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wzt2h9/Documents/Development/react-workspace/imperial-assault-campaign-log/src/App.js"],"names":["React","useState","ImperialTracker","MissionLog","unstable_renderSubtreeIntoContainer","request","require","rce","createElement","App","url","options","json","appData","error","res","body","console","log","statusCode","missionLog","setMissionLog","imperialTracker","ongoingAgendas","setOngoingAgendas","influence","setInfluence","xp","setXp","className","campaignName"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,mCAAT,QAAoD,WAApD;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGP,KAAK,CAACQ,aAAlB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAMC,GAAG,GAAG,uBAAZ;AACA,QAAMC,OAAO,GAAG;AAACC,IAAAA,IAAI,EAAE;AAAP,GAAhB;AACA,MAAIC,OAAJ;AAEAR,EAAAA,OAAO,CAACK,GAAD,EAAMC,OAAN,EAAe,CAACG,KAAD,EAAQC,GAAR,EAAaC,IAAb,KAAsB;AAC1C,QAAIF,KAAJ,EAAW;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,KAFD,MAEO,IAAIC,GAAG,CAACI,UAAJ,KAAmB,GAAvB,EAA4B;AACjCN,MAAAA,OAAO,GAAGG,IAAV;AACD,KAFM,MAEA;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACF,GARM,CAAP;AAUA,QAAK,CAACK,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAACY,OAAO,CAACO,UAAT,CAA3C,CAhBa,CAkBb;;AACA,QAAME,eAAe,GAAGT,OAAO,CAACS,eAAhC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAACqB,eAAe,CAACC,cAAjB,CAApD;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAACqB,eAAe,CAACG,SAAjB,CAA1C;AACA,QAAM,CAACE,EAAD,EAAKC,KAAL,IAAc3B,QAAQ,CAACqB,eAAe,CAACK,EAAjB,CAA5B;AAEA,SAAOpB,GAAG,CAAC,KAAD,EAAQ;AAACsB,IAAAA,SAAS,EAAE;AAAZ,GAAR,EACRtB,GAAG,CAACJ,UAAD,EAAa;AAAC2B,IAAAA,YAAY,EAAE;AAAf,GAAb,CADK,EAERvB,GAAG,CAACL,eAAD,EAAkB;AACjByB,IAAAA,EAAE,EAAEA,EADa;AAEjBC,IAAAA,KAAK,EAAEA,KAFU;AAGjBH,IAAAA,SAAS,EAAEA,SAHM;AAIjBC,IAAAA,YAAY,EAAEA,YAJG;AAKjBH,IAAAA,cAAc,EAAEA,cALC;AAMjBC,IAAAA,iBAAiB,EAAEA;AANF,GAAlB,CAFK,CAAV;AAYD;;AAED,eAAef,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ImperialTracker from './ImperialTracker';\nimport MissionLog from './MissionLog';\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\n\nconst request = require('request');\nconst rce = React.createElement;\n\nfunction App() {\n\n  const url = 'http://localhost:8080';\n  const options = {json: true};\n  let appData;\n\n  request(url, options, (error, res, body) => {\n    if (error) {\n      console.log(error);\n    } else if (res.statusCode === 200) {\n      appData = body;\n    } else {\n      console.log(res);\n    }\n  });\n\n  const[missionLog, setMissionLog] = useState(appData.missionLog);\n  \n  // const[imperialTracker, setImperialTracker] = useState(appData.imperialTracker);\n  const imperialTracker = appData.imperialTracker;\n  const [ongoingAgendas, setOngoingAgendas] = useState(imperialTracker.ongoingAgendas);\n  const [influence, setInfluence] = useState(imperialTracker.influence);\n  const [xp, setXp] = useState(imperialTracker.xp);\n\n  return rce('div', {className: 'App'},\n    rce(MissionLog, {campaignName: 'Return to Hoth'}),\n    rce(ImperialTracker, {\n        xp: xp,\n        setXp: setXp,\n        influence: influence,\n        setInfluence: setInfluence, \n        ongoingAgendas: ongoingAgendas,\n        setOngoingAgendas: setOngoingAgendas,\n      }\n    )\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}