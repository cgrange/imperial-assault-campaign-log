{"ast":null,"code":"import React, { useState } from 'react';\nimport Checkbox from './Checkbox.js';\nimport triangle from \"./images/triangle.svg\";\nimport './MissionRow.scss';\nconst rce = React.createElement; // props: upgradeSteps, upgradeComplete, handleUpgradeChange\n\nfunction UpgradeBox(props) {\n  return rce('span', {\n    className: 'upgrade-box'\n  }, rce('img', {\n    src: triangle\n  }, null), rce('span', {\n    className: 'cool-corners steps-and-check'\n  }, props.upgradeSteps, rce('div', {\n    className: 'checkbox-wrapper'\n  }, rce(Checkbox, {\n    checked: props.upgradeComplete,\n    setChecked: props.handleUpgradeChange\n  }))));\n}\n/* props: \n*    missionType,\n*    threatLevel,\n*    itemTiers\n*/\n\n\nfunction MissionRow(props) {\n  const [missionTitle, setMissionTitle] = useState('');\n  const [missionAccomplished, setMissionAccomplished] = useState(false);\n  const [rebelUpgradeComplete, setRebelUpgradeComplete] = useState(false);\n  const [imperialUpgradeComplete, setImperialUpgradeComplete] = useState(false);\n\n  function handleTitleChange(event) {\n    setMissionTitle(event.target.value);\n  }\n\n  function printUpgradeSteps(itemTiers, rebels) {\n    if (rebels) {\n      let tiersStr = itemTiers.map((el, idx, arr) => {\n        return idx === arr.length - 1 ? el : el + ' & ';\n      }).join(' ');\n      return 'Tier ' + tiersStr + ' Items, Spend XP';\n    } else {\n      return 'Agenda, Spend XP';\n    }\n  }\n\n  return rce('div', {\n    className: \"mission-row\"\n  }, rce('span', {\n    className: 'cool-corners'\n  }, rce('span', {\n    className: 'mission-type'\n  }, props.missionType), rce('input', {\n    className: 'mission-title',\n    type: 'text',\n    value: missionTitle,\n    onChange: handleTitleChange\n  }, null)), rce('span', {\n    className: 'threat-level'\n  }, props.threatLevel, rce('div', {\n    className: 'checkbox-wrapper'\n  }, rce(Checkbox, {\n    checked: missionAccomplished,\n    setChecked: setMissionAccomplished\n  }))), rce(UpgradeBox, {\n    upgradeSteps: printUpgradeSteps(props.itemTiers, true),\n    upgradeComplete: rebelUpgradeComplete,\n    handleUpgradeChange: setRebelUpgradeComplete\n  }), rce(UpgradeBox, {\n    upgradeSteps: printUpgradeSteps(null, false),\n    upgradeComplete: imperialUpgradeComplete,\n    handleUpgradeChange: setImperialUpgradeComplete\n  }));\n}\n\nexport default MissionRow;","map":{"version":3,"sources":["/Users/wzt2h9/Documents/Development/react-workspace/duels-frontend/src/MissionRow.js"],"names":["React","useState","Checkbox","rce","createElement","UpgradeBox","props","className","src","triangle","upgradeSteps","checked","upgradeComplete","setChecked","handleUpgradeChange","MissionRow","missionTitle","setMissionTitle","missionAccomplished","setMissionAccomplished","rebelUpgradeComplete","setRebelUpgradeComplete","imperialUpgradeComplete","setImperialUpgradeComplete","handleTitleChange","event","target","value","printUpgradeSteps","itemTiers","rebels","tiersStr","map","el","idx","arr","length","join","missionType","type","onChange","threatLevel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Checkbox from './Checkbox.js';\nimport triangle from './images/triangle.svg';\nimport './MissionRow.scss';\n\nconst rce = React.createElement;\n\n// props: upgradeSteps, upgradeComplete, handleUpgradeChange\nfunction UpgradeBox(props) {\n\treturn rce('span', {className: 'upgrade-box'},\n\t\trce('img', {src: triangle}, null),\n\t\trce('span', {className: 'cool-corners steps-and-check'}, \n\t\t\tprops.upgradeSteps,\n\t\t\trce('div', {className: 'checkbox-wrapper'},\n\t\t\t\trce(Checkbox, {checked: props.upgradeComplete, setChecked: props.handleUpgradeChange})\n\t\t\t)\n\t\t),\n\t)\n}\n\n/* props: \n*    missionType,\n*    threatLevel,\n*    itemTiers\n*/\nfunction MissionRow(props) {\n\tconst [missionTitle, setMissionTitle] = useState('');\n\tconst [missionAccomplished, setMissionAccomplished] = useState(false);\n\tconst [rebelUpgradeComplete, setRebelUpgradeComplete] = useState(false);\n\tconst [imperialUpgradeComplete, setImperialUpgradeComplete] = useState(false);\n\n\tfunction handleTitleChange(event) {\n\t\tsetMissionTitle(event.target.value);\n\t}\n\n\tfunction printUpgradeSteps(itemTiers, rebels) {\n\t\tif(rebels) {\n\t\t\tlet tiersStr = itemTiers.map((el, idx, arr) => {\n\t\t\t\treturn idx === arr.length - 1 ? el : el + ' & ';\n\t\t\t}).join(' ');\n\t\t\treturn 'Tier ' + tiersStr + ' Items, Spend XP';\n\t\t} else {\n\t\t\treturn 'Agenda, Spend XP';\n\t\t}\n\t}\n  \n\treturn rce('div', {className: \"mission-row\"},\n\t\trce('span', {className: 'cool-corners'}, \n\t\t\trce('span', {className: 'mission-type'}, props.missionType),\n\t\t\trce('input', {className: 'mission-title', type: 'text', value: missionTitle, onChange: handleTitleChange}, null),\n\t\t),\n\t\trce('span', {className: 'threat-level'}, \n\t\t\tprops.threatLevel,\n\t\t\trce('div', {className: 'checkbox-wrapper'},\n\t\t\t\trce(Checkbox, {checked: missionAccomplished, setChecked: setMissionAccomplished}),\n\t\t\t)\n\t\t),\n\t\trce(UpgradeBox, \n\t\t\t{\n\t\t\t\tupgradeSteps: printUpgradeSteps(props.itemTiers, true),\n\t\t\t\tupgradeComplete: rebelUpgradeComplete, \n\t\t\t\thandleUpgradeChange: setRebelUpgradeComplete\n\t\t\t}\n\t\t),\n\t\trce(UpgradeBox,\n\t\t\t{\n\t\t\t\tupgradeSteps: printUpgradeSteps(null, false),\n\t\t\t\tupgradeComplete: imperialUpgradeComplete,\n\t\t\t\thandleUpgradeChange: setImperialUpgradeComplete\n\t\t\t}\n\t\t),\n\t)\n}\n\nexport default MissionRow;"]},"metadata":{},"sourceType":"module"}